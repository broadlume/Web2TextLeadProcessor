# use the official Bun image
# see all versions at https://hub.docker.com/r/oven/bun/tags
FROM oven/bun:latest AS base
RUN mkdir -p /app
WORKDIR /app

# install dependencies into temp directory
# this will cache them and speed up future builds
FROM base AS install
RUN mkdir -p /temp/dev
COPY package.json bun.lockb /temp/dev/
COPY patches/ /temp/dev/patches/
RUN 
RUN ls /temp/dev && cd /temp/dev && bun install --frozen-lockfile

# install with --production (exclude devDependencies)
RUN mkdir -p /temp/prod
COPY package.json bun.lockb /temp/prod/
COPY patches/ /temp/prod/patches/
RUN cd /temp/prod && bun install --frozen-lockfile --production

# Install Restate CLI globally
RUN apt-get -y update; apt-get -y install curl
RUN BIN=/usr/local/bin && RESTATE_PLATFORM=aarch64-unknown-linux-musl && \
curl -LO https://github.com/restatedev/restate/releases/latest/download/restate.$RESTATE_PLATFORM.tar.gz && \
tar -xvf restate.$RESTATE_PLATFORM.tar.gz && \
chmod +x restate && \
mv restate $BIN

# copy node_modules from temp directory
# then copy all (non-ignored) project files into the image
FROM base AS prerelease
COPY --from=install /temp/dev/node_modules node_modules
COPY . .

# tests & build
ENV NODE_ENV=production
COPY .env.prod .env
RUN bun run build && bun run bundle

# copy production dependencies and source code into final image
FROM node:slim AS release
COPY --from=install /temp/prod/node_modules node_modules
COPY --from=install /usr/local/bin/restate /usr/local/bin/restate
COPY --from=prerelease /app/dist/app.js ./dist/app.js
COPY --from=prerelease /app/package.json .
COPY .env.prod .env





# run the app
EXPOSE 9080/tcp
ENV NODE_ENV=production
ENTRYPOINT ["node", "./dist/app.js"]
