# This docker compose is unused for prod deployment (we use AWS Copilot to deploy)
# This is just for testing the production application locally
# Run with `docker compose -f docker-compose.prod.yaml up --build --force-recreate`
name: web2text-prod
services:
  web2text:
    container_name: web2text-service
    build: 
      context: .
      dockerfile: ./modules/web2text/Dockerfile
    networks:
      - restate-network
    ports:
    # Restate service port
      - "9080:9080"
    restart: always
    depends_on: 
      - restate-server
      - twilio_proxy
      - jaeger
    environment:
      RESTATE_ADMIN_URL: "http://restate-server:9070"
  restate-server:
    image: "docker.restate.dev/restatedev/restate:1.3.2"
    container_name: restate-server
    networks:
      - restate-network
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
    - "5122:5122" # NodeCtl - Control port for Restate Server nodes (gRPC + HTTP for Prometheus metrics /metrics)
    - "8080:8080" # Ingress - Acts as an API gateway for all services registered with Restate (HTTP)
    - "9070:9070" # Admin - Allows for CRUD operations on service/service deployment metadata, eg for service registration (HTTP)
    - "9071:9071" # Postgres - Exposes Restate RocksDB read-only storage operations using the Postgres protocol (Postgres)
    environment:
      RESTATE_TRACING_ENDPOINT: http://web2text-jaeger:4317
    restart: always
  twilio_proxy:
    container_name: web2text-twilio-proxy
    build: 
      context: ./modules/twilio_proxy
    networks:
      - restate-network
    ports:
    # Proxy service port
      - "3000:3000"
    environment:
      - TWILIO_ACCOUNT_SID
      - TWILIO_AUTH_TOKEN
      - NUMBER_POOL=development
    restart: always
  jaeger:
    container_name: web2text-jaeger
    image: jaegertracing/all-in-one:1.46
    networks:
      - restate-network
    ports:
      - "4317:4317"
      - "16686:16686"
    environment:
      COLLECTOR_OTLP_ENABLED: true
    restart: always
networks:
  restate-network: